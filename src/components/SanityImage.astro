---
import { Image } from 'astro:assets';
import { urlFor } from '../lib/sanity-client';

interface Props {
  image: {
    alt: string;
    asset: {
      metadata: {
        _type: string;
        blurHash: string;
        dimensions: {
          _type: string;
          aspectRatio: number;
          width: number;
          height: number;
        };
        hasAlpha: boolean;
        isOpaque: boolean;
        lqip: string;
        palette: any;
      },
      url: string;
    }
  },
  sizes: string;
  layout?: 'constrained' | 'full-width' | 'fixed' | 'none';
  priority?: boolean;
}

const { image, sizes, layout, priority } = Astro.props

let srcSet = `${urlFor(image.asset.url).auto('format').url()} ${image.asset.metadata.dimensions.width}w`
let sourceIndex = 1
const scaleFactor = 0.5

for (let i = 0; i < 3; i++) {
  const size = Math.floor(image.asset.metadata.dimensions.width * (scaleFactor / sourceIndex))
  console.log(size)
  const url = `${urlFor(image.asset.url).auto('format').width(size).url()} ${size}w`
  sourceIndex++
  const newSrcSet = srcSet.concat(", ", url)
  srcSet = newSrcSet
}
---
<Image 
  src={urlFor(image.asset.url).auto('format').url()}
  alt={image.alt}
  sizes={sizes}
  srcset={srcSet}
  width={image.asset.metadata.dimensions.width}
  height={image.asset.metadata.dimensions.height}
  layout={layout ? layout: "constrained"}
  priority={priority ? priority : false}
/>

